#!/usr/bin/env python

import sys, json

def fail(msg, code=11):
    sys.stderr.write(msg+"\n")
    exit(code)

def validate_config(config):
    assert isinstance(config, dict)
    for host in config:
        host_config = config[host]
        assert isinstance(host_config, dict)
        assert 'auth' in host_config
        keys = sorted(host_config.keys())
        keys.remove('auth')
        if 'email' in keys:
            keys.remove('email')
        if keys:
            fail('Unrecognized keys for %s: ' % host + keys.join(', '))

if len(sys.argv) > 2:
    sys.stderr.write('Usage: eb-docker-config-transform [path-to-docker-config.cfg]' + "\n")
    exit(10)

if len(sys.argv) > 1:
    with open(sys.argv[1]) as f:
        config = f.read()
else:
    config = sys.stdin.read()
    
config = json.loads(config)

if not isinstance(config, dict):
    fail("Configuration data is not a hash")

if 'auths' in config:
    # docker 1.7 format
    keys = sorted(config.keys())
    keys.remove('auths')
    if keys:
        fail('Unrecognized top level keys: ' + keys.join(', '))
    validate_config(config['auths'])
    config = config['auths']
elif 'auth' in config:
    # docker 1.6 format
    validate_config(config)
else:
    fail('Unrecognized configuration file format')

print(json.dumps(config, sort_keys=True, indent=2, separators=(',', ': ')))
